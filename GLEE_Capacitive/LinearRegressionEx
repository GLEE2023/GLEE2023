#include <iostream>
using namespace std;
#include <iostream>
#include <vector>
#include <math.h>
using namespace std;
void print(vector <vector<double>> v){
    for(int i =0; i < v.size();i++){
        for(int j =0; j < 2;j++){
                cout<<v[i][j]<< " ";
        }
            cout<<endl;
    }
}
void linearRegression(vector <vector<double>> v){
    double xAvg = 0;
    double yAvg = 0;
    double stdProductSum = 0;
    double xStdSquared = 0;
    double yStdSquared = 0;
    double r = 0;
    double b =0;
    double yIntercept=0;
    for(int i =0; i < v.size();i++){
        xAvg = xAvg+ v[i][0];
        yAvg = yAvg+ v[i][1];
    }
    xAvg= xAvg/v.size();
    yAvg= yAvg/v.size();
    for(int j =0; j < v.size();j++){
        stdProductSum=stdProductSum+((v[j][0]-xAvg)*(v[j][1]-yAvg));
        xStdSquared = xStdSquared+pow((v[j][0]-xAvg),2);
        yStdSquared = yStdSquared+pow((v[j][1]-yAvg),2);
    }
    r = stdProductSum/sqrt((xStdSquared*yStdSquared));
    b= r*(sqrt((yStdSquared/(v.size()-1))/(xStdSquared/(v.size()-1))));
    yIntercept = yAvg - b*xAvg;
    cout<<"y = "<<yIntercept<<" + "<< b<<"x"<<endl;
}
void helper(vector<double> x, vector<double> y){
    if(x.size()!=y.size()){
        cout<< "X and Y arrays must be same size"<<endl;
        return;
    }
    vector <vector<double>> v;
    for(int i=0; i<x.size(); i++){
        v.push_back({x[i],y[i]});
    }
    linearRegression(v);
}
int main() {
        vector <vector<double>> v;
        v.push_back({17,94});
        v.push_back({13,73});
        v.push_back({12,59});
        v.push_back({15,80});
        v.push_back({16,93});
        vector <double> x;
        vector <double> y;
        x.push_back(17);
        x.push_back(13);
        x.push_back(12);
        x.push_back(15);
        x.push_back(16);
        y.push_back(94);
        y.push_back(73);
        y.push_back(59);
        y.push_back(80);
        y.push_back(93);
        helper(x,y);
        linearRegression(v);
}

